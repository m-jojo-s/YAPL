
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SnonassocLESSERGREATERLESSER_EQUALGREATER_EQUALIS_EQUALNOT_EQUALleftPLUSMINUSleftFWSLASHASTERISKleftMODTOPIleftL_ROUNDR_ROUNDleftL_CURLYR_CURLYleftL_SQRR_SQRASSIGNMENT ASTERISK BOOL CHAR COMMA DATA_TYPE DOT ELSE FLOAT FOR FUNC_DEC FWSLASH GREATER GREATER_EQUAL IF INT IS_EQUAL LESSER LESSER_EQUAL LOGICAL L_CURLY L_ROUND L_SQR MINUS MINUS_MINUS MOD NOT NOT_EQUAL PLUS PLUS_PLUS PRINT RETURN R_CURLY R_ROUND R_SQR SEMICOL STRING STRUCT TOPI VAR_NAME\n    S : stmt S\n    \n    S :\n    \n    stmt : exp SEMICOL\n        | SEMICOL\n        | L_ROUND R_ROUND\n        | L_CURLY R_CURLY\n        | L_SQR R_SQR\n    \n    stmt_blk : L_CURLY S R_CURLY\n    \n    stmt : PRINT L_ROUND args R_ROUND SEMICOL\n    \n    args : args COMMA args\n        | exp\n        |\n    \n    stmt : if\n    \n    if : IF L_ROUND exp R_ROUND stmt_blk else \n    \n    else : ELSE stmt_blk\n        | ELSE if\n        |\n    \n    stmt : FOR L_ROUND stmt exp SEMICOL stmt R_ROUND stmt_blk\n    \n    stmt : STRUCT VAR_NAME dec_blk\n    \n    stmt : VAR_NAME VAR_NAME SEMICOL\n    \n    stmt : declare\n        | dec_blk\n    \n    dec_blk : L_CURLY declare R_CURLY\n    \n    declare : dec declare\n        |\n    \n    dec : DATA_TYPE VAR_NAME SEMICOL\n        | DATA_TYPE VAR_NAME ASSIGNMENT exp SEMICOL\n    \n    stmt : FUNC_DEC VAR_NAME param_blk stmt_blk\n    \n    param_blk : L_ROUND param R_ROUND\n    \n    param : param COMMA param \n        | DATA_TYPE VAR_NAME\n        |\n    \n    stmt : RETURN exp SEMICOL\n        | RETURN SEMICOL\n    \n    stmt : VAR_NAME ASSIGNMENT exp SEMICOL\n        | exp ASSIGNMENT exp SEMICOL\n    \n    exp : L_ROUND exp R_ROUND\n        | L_CURLY exp R_CURLY\n        | L_SQR exp R_SQR\n     \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp ASTERISK exp\n        | exp FWSLASH exp\n        | exp TOPI exp\n        | exp MOD exp\n        | exp LESSER exp\n        | exp GREATER exp\n        | exp LESSER_EQUAL exp\n        | exp GREATER_EQUAL exp\n        | exp IS_EQUAL exp\n        | exp NOT_EQUAL exp\n        | exp LOGICAL exp\n        | exp DOT VAR_NAME\n    \n    exp : VAR_NAME L_ROUND args R_ROUND\n    \n    exp : MINUS exp\n    \n    exp : NOT exp\n    \n    exp : VAR_NAME PLUS_PLUS\n        | VAR_NAME MINUS_MINUS\n    \n    exp : VAR_NAME\n    \n    exp : INT\n        | FLOAT\n    \n    exp : STRING\n        | CHAR\n    \n    exp : BOOL\n    '
    
_lr_action_items = {'$end':([0,1,2,4,9,13,14,25,27,28,45,50,53,65,69,88,93,95,100,102,104,108,110,116,123,124,126,128,131,132,133,],[-2,0,-2,-4,-13,-22,-21,-25,-1,-3,-5,-6,-7,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,-9,-17,-27,-8,-14,-15,-16,-18,]),'SEMICOL':([0,2,3,4,9,12,13,14,16,19,20,21,22,23,25,28,45,49,50,53,56,58,61,62,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,96,100,102,104,105,107,108,109,110,111,115,116,118,123,124,126,128,131,132,133,],[4,4,28,-4,-13,-59,-22,-21,65,-60,-61,-62,-63,-64,-25,-3,-5,-59,-6,-7,4,95,-57,-58,100,-34,-55,-56,-24,102,104,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-23,-39,-19,-20,108,-33,-26,-36,116,118,-35,-54,-28,4,124,-9,4,-17,-27,-8,-14,-15,-16,-18,]),'L_ROUND':([0,2,4,5,6,7,8,9,10,12,13,14,16,17,18,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,53,55,56,59,60,63,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[5,5,-4,44,44,44,55,-13,56,60,-22,-21,44,44,44,68,-25,-3,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-5,44,44,60,-6,-7,44,5,44,44,99,-34,44,-24,-23,44,-19,-20,-33,-26,44,-36,44,-35,-28,5,-9,5,-17,-27,-8,-14,-15,-16,-18,]),'L_CURLY':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,57,59,60,65,68,69,88,92,93,95,98,100,102,103,104,106,108,110,111,114,116,118,120,123,124,126,128,129,130,131,132,133,],[6,6,-4,47,47,47,-13,-22,-21,47,47,47,-25,-3,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-5,47,47,-6,-7,47,6,94,47,47,-34,47,-24,-23,47,-19,-20,111,-33,-26,47,-36,47,-35,-28,6,111,-9,6,-29,-17,-27,-8,-14,111,111,-15,-16,-18,]),'L_SQR':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[7,7,-4,48,48,48,-13,-22,-21,48,48,48,-25,-3,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-5,48,48,-6,-7,48,7,48,48,-34,48,-24,-23,48,-19,-20,-33,-26,48,-36,48,-35,-28,7,-9,7,-17,-27,-8,-14,-15,-16,-18,]),'PRINT':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,131,132,133,],[8,8,-4,-13,-22,-21,-25,-3,-5,-6,-7,8,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,8,-9,8,-17,-27,-8,-14,-15,-16,-18,]),'FOR':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,131,132,133,],[10,10,-4,-13,-22,-21,-25,-3,-5,-6,-7,10,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,10,-9,10,-17,-27,-8,-14,-15,-16,-18,]),'STRUCT':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,131,132,133,],[11,11,-4,-13,-22,-21,-25,-3,-5,-6,-7,11,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,11,-9,11,-17,-27,-8,-14,-15,-16,-18,]),'VAR_NAME':([0,2,4,5,6,7,9,11,12,13,14,15,16,17,18,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,113,116,118,123,124,126,128,131,132,133,],[12,12,-4,49,49,49,-13,57,58,-22,-21,63,49,49,49,-25,70,-3,49,49,49,49,49,49,49,49,49,49,49,49,49,49,85,49,-5,49,49,-6,-7,49,12,49,49,-34,49,-24,-23,49,-19,-20,-33,-26,49,-36,49,-35,-28,12,122,-9,12,-17,-27,-8,-14,-15,-16,-18,]),'FUNC_DEC':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,131,132,133,],[15,15,-4,-13,-22,-21,-25,-3,-5,-6,-7,15,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,15,-9,15,-17,-27,-8,-14,-15,-16,-18,]),'RETURN':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,131,132,133,],[16,16,-4,-13,-22,-21,-25,-3,-5,-6,-7,16,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,16,-9,16,-17,-27,-8,-14,-15,-16,-18,]),'MINUS':([0,2,3,4,5,6,7,9,12,13,14,16,17,18,19,20,21,22,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,59,60,61,62,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,100,101,102,103,104,106,107,108,109,110,111,115,116,118,123,124,126,128,131,132,133,],[17,17,31,-4,17,17,17,-13,-59,-22,-21,17,17,17,-60,-61,-62,-63,-64,-25,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-5,31,17,17,-59,-6,31,-7,31,17,17,17,17,-57,-58,31,-34,-55,31,17,-24,31,-40,-41,-42,-43,-44,-45,31,31,31,31,31,31,31,-53,-37,-38,-23,-39,31,17,-19,-20,31,-33,31,-26,17,-36,17,31,-35,-54,-28,17,31,-9,17,-17,-27,-8,-14,-15,-16,-18,]),'NOT':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[18,18,-4,18,18,18,-13,-22,-21,18,18,18,-25,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,18,18,-6,-7,18,18,18,18,-34,18,-24,-23,18,-19,-20,-33,-26,18,-36,18,-35,-28,18,-9,18,-17,-27,-8,-14,-15,-16,-18,]),'INT':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[19,19,-4,19,19,19,-13,-22,-21,19,19,19,-25,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,19,19,-6,-7,19,19,19,19,-34,19,-24,-23,19,-19,-20,-33,-26,19,-36,19,-35,-28,19,-9,19,-17,-27,-8,-14,-15,-16,-18,]),'FLOAT':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[20,20,-4,20,20,20,-13,-22,-21,20,20,20,-25,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-5,20,20,-6,-7,20,20,20,20,-34,20,-24,-23,20,-19,-20,-33,-26,20,-36,20,-35,-28,20,-9,20,-17,-27,-8,-14,-15,-16,-18,]),'STRING':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[21,21,-4,21,21,21,-13,-22,-21,21,21,21,-25,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-5,21,21,-6,-7,21,21,21,21,-34,21,-24,-23,21,-19,-20,-33,-26,21,-36,21,-35,-28,21,-9,21,-17,-27,-8,-14,-15,-16,-18,]),'CHAR':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[22,22,-4,22,22,22,-13,-22,-21,22,22,22,-25,-3,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-5,22,22,-6,-7,22,22,22,22,-34,22,-24,-23,22,-19,-20,-33,-26,22,-36,22,-35,-28,22,-9,22,-17,-27,-8,-14,-15,-16,-18,]),'BOOL':([0,2,4,5,6,7,9,13,14,16,17,18,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,50,53,55,56,59,60,65,68,69,88,92,93,95,100,102,103,104,106,108,110,111,116,118,123,124,126,128,131,132,133,],[23,23,-4,23,23,23,-13,-22,-21,23,23,23,-25,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-5,23,23,-6,-7,23,23,23,23,-34,23,-24,-23,23,-19,-20,-33,-26,23,-36,23,-35,-28,23,-9,23,-17,-27,-8,-14,-15,-16,-18,]),'IF':([0,2,4,9,13,14,25,28,45,50,53,56,65,69,88,93,95,100,102,104,108,110,111,116,118,123,124,126,128,129,131,132,133,],[24,24,-4,-13,-22,-21,-25,-3,-5,-6,-7,24,-34,-24,-23,-19,-20,-33,-26,-36,-35,-28,24,-9,24,-17,-27,-8,-14,24,-15,-16,-18,]),'DATA_TYPE':([0,2,4,6,9,13,14,25,28,45,50,53,56,65,69,88,93,94,95,99,100,102,104,108,110,111,116,118,121,123,124,126,128,131,132,133,],[26,26,-4,26,-13,-22,-21,26,-3,-5,-6,-7,26,-34,-24,-23,-19,26,-20,113,-33,-26,-36,-35,-28,26,-9,26,113,-17,-27,-8,-14,-15,-16,-18,]),'R_CURLY':([2,4,6,9,13,14,19,20,21,22,23,25,27,28,45,49,50,51,52,53,61,62,65,66,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,100,102,104,108,109,110,111,116,119,123,124,126,128,131,132,133,],[-2,-4,50,-13,-22,-21,-60,-61,-62,-63,-64,-25,-1,-3,-5,-59,-6,87,88,-7,-57,-58,-34,-55,-56,-24,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-23,-39,-19,-25,-20,-33,-26,-36,-35,-54,-28,-2,-9,126,-17,-27,-8,-14,-15,-16,-18,]),'ASSIGNMENT':([3,12,19,20,21,22,23,49,61,62,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,109,],[29,59,-60,-61,-62,-63,-64,-59,-57,-58,-55,-56,103,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-39,-54,]),'PLUS':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[30,-59,-60,-61,-62,-63,-64,30,-59,30,30,-57,-58,30,-55,30,30,-40,-41,-42,-43,-44,-45,30,30,30,30,30,30,30,-53,-37,-38,-39,30,30,30,30,-54,30,]),'ASTERISK':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[32,-59,-60,-61,-62,-63,-64,32,-59,32,32,-57,-58,32,32,32,32,32,32,-42,-43,-44,-45,32,32,32,32,32,32,32,-53,-37,-38,-39,32,32,32,32,-54,32,]),'FWSLASH':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[33,-59,-60,-61,-62,-63,-64,33,-59,33,33,-57,-58,33,33,33,33,33,33,-42,-43,-44,-45,33,33,33,33,33,33,33,-53,-37,-38,-39,33,33,33,33,-54,33,]),'TOPI':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[34,-59,-60,-61,-62,-63,-64,34,-59,34,34,-57,-58,34,34,34,34,34,34,34,34,-44,-45,34,34,34,34,34,34,34,-53,-37,-38,-39,34,34,34,34,-54,34,]),'MOD':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[35,-59,-60,-61,-62,-63,-64,35,-59,35,35,-57,-58,35,35,35,35,35,35,35,35,-44,-45,35,35,35,35,35,35,35,-53,-37,-38,-39,35,35,35,35,-54,35,]),'LESSER':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[36,-59,-60,-61,-62,-63,-64,36,-59,36,36,-57,-58,36,-55,36,36,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,36,-53,-37,-38,-39,36,36,36,36,-54,36,]),'GREATER':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[37,-59,-60,-61,-62,-63,-64,37,-59,37,37,-57,-58,37,-55,37,37,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,37,-53,-37,-38,-39,37,37,37,37,-54,37,]),'LESSER_EQUAL':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[38,-59,-60,-61,-62,-63,-64,38,-59,38,38,-57,-58,38,-55,38,38,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,38,-53,-37,-38,-39,38,38,38,38,-54,38,]),'GREATER_EQUAL':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[39,-59,-60,-61,-62,-63,-64,39,-59,39,39,-57,-58,39,-55,39,39,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,39,-53,-37,-38,-39,39,39,39,39,-54,39,]),'IS_EQUAL':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[40,-59,-60,-61,-62,-63,-64,40,-59,40,40,-57,-58,40,-55,40,40,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,40,-53,-37,-38,-39,40,40,40,40,-54,40,]),'NOT_EQUAL':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[41,-59,-60,-61,-62,-63,-64,41,-59,41,41,-57,-58,41,-55,41,41,-40,-41,-42,-43,-44,-45,None,None,None,None,None,None,41,-53,-37,-38,-39,41,41,41,41,-54,41,]),'LOGICAL':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[42,-59,-60,-61,-62,-63,-64,42,-59,42,42,-57,-58,42,-55,42,42,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,42,-53,-37,-38,-39,42,42,42,42,-54,42,]),'DOT':([3,12,19,20,21,22,23,46,49,51,54,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,96,101,107,109,115,],[43,-59,-60,-61,-62,-63,-64,43,-59,43,43,-57,-58,43,-55,43,43,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,43,-53,-37,-38,-39,43,43,43,43,-54,43,]),'R_ROUND':([4,5,9,13,14,19,20,21,22,23,25,28,45,46,49,50,53,55,60,61,62,65,66,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,99,100,101,102,104,106,108,109,110,112,116,117,118,121,122,123,124,125,126,127,128,131,132,133,],[-4,45,-13,-22,-21,-60,-61,-62,-63,-64,-25,-3,-5,86,-59,-6,-7,-12,-12,-57,-58,-34,-55,-56,-24,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-23,-39,105,-11,-19,-20,109,-32,-33,114,-26,-36,-12,-35,-54,-28,120,-9,-10,-25,-32,-31,-17,-27,130,-8,-30,-14,-15,-16,-18,]),'R_SQR':([7,19,20,21,22,23,49,54,61,62,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,109,],[53,-60,-61,-62,-63,-64,-59,89,-57,-58,-55,-56,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-39,-54,]),'PLUS_PLUS':([12,49,],[61,61,]),'MINUS_MINUS':([12,49,],[62,62,]),'COMMA':([19,20,21,22,23,49,55,60,61,62,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,97,99,106,109,112,117,121,122,127,],[-60,-61,-62,-63,-64,-59,-12,-12,-57,-58,-55,-56,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-37,-38,-39,106,-11,106,-32,-12,-54,121,106,-32,-31,121,]),'ELSE':([123,126,],[129,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,2,111,],[1,27,119,]),'stmt':([0,2,56,111,118,],[2,2,92,2,125,]),'exp':([0,2,5,6,7,16,17,18,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,47,48,55,56,59,60,68,92,103,106,111,118,],[3,3,46,51,54,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,46,51,54,91,3,96,91,101,107,115,91,3,3,]),'if':([0,2,56,111,118,129,],[9,9,9,9,9,132,]),'dec_blk':([0,2,56,57,111,118,],[13,13,13,93,13,13,]),'declare':([0,2,6,25,56,94,111,118,],[14,14,52,69,14,52,14,14,]),'dec':([0,2,6,25,56,94,111,118,],[25,25,25,25,25,25,25,25,]),'args':([55,60,106,],[90,97,117,]),'param_blk':([63,],[98,]),'stmt_blk':([98,114,129,130,],[110,123,131,133,]),'param':([99,121,],[112,127,]),'else':([123,],[128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> stmt S','S',2,'p_start','yapl_parser.py',25),
  ('S -> <empty>','S',0,'p_start_empty','yapl_parser.py',32),
  ('stmt -> exp SEMICOL','stmt',2,'p_stmt_exp','yapl_parser.py',39),
  ('stmt -> SEMICOL','stmt',1,'p_stmt_exp','yapl_parser.py',40),
  ('stmt -> L_ROUND R_ROUND','stmt',2,'p_stmt_exp','yapl_parser.py',41),
  ('stmt -> L_CURLY R_CURLY','stmt',2,'p_stmt_exp','yapl_parser.py',42),
  ('stmt -> L_SQR R_SQR','stmt',2,'p_stmt_exp','yapl_parser.py',43),
  ('stmt_blk -> L_CURLY S R_CURLY','stmt_blk',3,'p_stmt_blk','yapl_parser.py',49),
  ('stmt -> PRINT L_ROUND args R_ROUND SEMICOL','stmt',5,'p_print_stmt','yapl_parser.py',56),
  ('args -> args COMMA args','args',3,'p_args_exp','yapl_parser.py',63),
  ('args -> exp','args',1,'p_args_exp','yapl_parser.py',64),
  ('args -> <empty>','args',0,'p_args_exp','yapl_parser.py',65),
  ('stmt -> if','stmt',1,'p_if_stmt','yapl_parser.py',75),
  ('if -> IF L_ROUND exp R_ROUND stmt_blk else','if',6,'p_if','yapl_parser.py',81),
  ('else -> ELSE stmt_blk','else',2,'p_else','yapl_parser.py',87),
  ('else -> ELSE if','else',2,'p_else','yapl_parser.py',88),
  ('else -> <empty>','else',0,'p_else','yapl_parser.py',89),
  ('stmt -> FOR L_ROUND stmt exp SEMICOL stmt R_ROUND stmt_blk','stmt',8,'p_for_stmt','yapl_parser.py',96),
  ('stmt -> STRUCT VAR_NAME dec_blk','stmt',3,'p_struct_stmt','yapl_parser.py',102),
  ('stmt -> VAR_NAME VAR_NAME SEMICOL','stmt',3,'p_struct_def','yapl_parser.py',108),
  ('stmt -> declare','stmt',1,'p_dec_stmt','yapl_parser.py',114),
  ('stmt -> dec_blk','stmt',1,'p_dec_stmt','yapl_parser.py',115),
  ('dec_blk -> L_CURLY declare R_CURLY','dec_blk',3,'p_dec_blk','yapl_parser.py',121),
  ('declare -> dec declare','declare',2,'p_declare','yapl_parser.py',128),
  ('declare -> <empty>','declare',0,'p_declare','yapl_parser.py',129),
  ('dec -> DATA_TYPE VAR_NAME SEMICOL','dec',3,'p_dec','yapl_parser.py',137),
  ('dec -> DATA_TYPE VAR_NAME ASSIGNMENT exp SEMICOL','dec',5,'p_dec','yapl_parser.py',138),
  ('stmt -> FUNC_DEC VAR_NAME param_blk stmt_blk','stmt',4,'p_func_dec','yapl_parser.py',147),
  ('param_blk -> L_ROUND param R_ROUND','param_blk',3,'p_param_blk','yapl_parser.py',153),
  ('param -> param COMMA param','param',3,'p_param','yapl_parser.py',159),
  ('param -> DATA_TYPE VAR_NAME','param',2,'p_param','yapl_parser.py',160),
  ('param -> <empty>','param',0,'p_param','yapl_parser.py',161),
  ('stmt -> RETURN exp SEMICOL','stmt',3,'p_return_stmt','yapl_parser.py',172),
  ('stmt -> RETURN SEMICOL','stmt',2,'p_return_stmt','yapl_parser.py',173),
  ('stmt -> VAR_NAME ASSIGNMENT exp SEMICOL','stmt',4,'p_assign_stmt','yapl_parser.py',183),
  ('stmt -> exp ASSIGNMENT exp SEMICOL','stmt',4,'p_assign_stmt','yapl_parser.py',184),
  ('exp -> L_ROUND exp R_ROUND','exp',3,'p_exp_brackets','yapl_parser.py',190),
  ('exp -> L_CURLY exp R_CURLY','exp',3,'p_exp_brackets','yapl_parser.py',191),
  ('exp -> L_SQR exp R_SQR','exp',3,'p_exp_brackets','yapl_parser.py',192),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','yapl_parser.py',198),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','yapl_parser.py',199),
  ('exp -> exp ASTERISK exp','exp',3,'p_exp_bin','yapl_parser.py',200),
  ('exp -> exp FWSLASH exp','exp',3,'p_exp_bin','yapl_parser.py',201),
  ('exp -> exp TOPI exp','exp',3,'p_exp_bin','yapl_parser.py',202),
  ('exp -> exp MOD exp','exp',3,'p_exp_bin','yapl_parser.py',203),
  ('exp -> exp LESSER exp','exp',3,'p_exp_bin','yapl_parser.py',204),
  ('exp -> exp GREATER exp','exp',3,'p_exp_bin','yapl_parser.py',205),
  ('exp -> exp LESSER_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',206),
  ('exp -> exp GREATER_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',207),
  ('exp -> exp IS_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',208),
  ('exp -> exp NOT_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',209),
  ('exp -> exp LOGICAL exp','exp',3,'p_exp_bin','yapl_parser.py',210),
  ('exp -> exp DOT VAR_NAME','exp',3,'p_exp_bin','yapl_parser.py',211),
  ('exp -> VAR_NAME L_ROUND args R_ROUND','exp',4,'p_exp_call','yapl_parser.py',217),
  ('exp -> MINUS exp','exp',2,'p_exp_neg','yapl_parser.py',223),
  ('exp -> NOT exp','exp',2,'p_exp_not','yapl_parser.py',229),
  ('exp -> VAR_NAME PLUS_PLUS','exp',2,'p_exp_uni','yapl_parser.py',235),
  ('exp -> VAR_NAME MINUS_MINUS','exp',2,'p_exp_uni','yapl_parser.py',236),
  ('exp -> VAR_NAME','exp',1,'p_exp_var','yapl_parser.py',242),
  ('exp -> INT','exp',1,'p_exp_num','yapl_parser.py',248),
  ('exp -> FLOAT','exp',1,'p_exp_num','yapl_parser.py',249),
  ('exp -> STRING','exp',1,'p_exp_str','yapl_parser.py',255),
  ('exp -> CHAR','exp',1,'p_exp_str','yapl_parser.py',256),
  ('exp -> BOOL','exp',1,'p_exp_bool','yapl_parser.py',262),
]
