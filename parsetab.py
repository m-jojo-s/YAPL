
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SnonassocLESSERGREATERLESSER_EQUALGREATER_EQUALIS_EQUALNOT_EQUALleftPLUSMINUSleftFWSLASHASTERISKleftMODTOPIleftL_ROUNDR_ROUNDleftL_CURLYR_CURLYleftL_SQRR_SQRASSIGNMENT ASTERISK BOOL CHAR COMMA DATA_TYPE ELSE FLOAT FOR FWSLASH GREATER GREATER_EQUAL IF INT IS_EQUAL LESSER LESSER_EQUAL LOGICAL L_CURLY L_ROUND L_SQR MINUS MINUS_MINUS MOD NOT NOT_EQUAL PLUS PLUS_PLUS PRINT R_CURLY R_ROUND R_SQR SEMICOL STRING TOPI VAR_NAME\n    S : stmt S\n    \n    S :\n    \n    stmt : exp SEMICOL\n        | SEMICOL\n        | L_ROUND R_ROUND\n        | L_CURLY R_CURLY\n        | L_SQR R_SQR\n    \n    stmt_blk : L_CURLY S R_CURLY\n    \n    stmt : PRINT L_ROUND args R_ROUND SEMICOL\n    \n    args : exp\n        | args COMMA args\n    \n    stmt : if\n    \n    if : IF L_ROUND exp R_ROUND stmt_blk else \n    \n    else : ELSE stmt_blk\n        | ELSE if\n        |\n    \n    stmt : FOR L_ROUND stmt exp SEMICOL stmt R_ROUND stmt_blk\n    \n    stmt : DATA_TYPE VAR_NAME SEMICOL\n        | DATA_TYPE VAR_NAME ASSIGNMENT exp SEMICOL\n    \n    stmt : VAR_NAME ASSIGNMENT exp SEMICOL\n    \n    exp : L_ROUND exp R_ROUND\n        | L_CURLY exp R_CURLY\n        | L_SQR exp R_SQR\n     \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp ASTERISK exp\n        | exp FWSLASH exp\n        | exp TOPI exp\n        | exp MOD exp\n        | exp LESSER exp\n        | exp GREATER exp\n        | exp LESSER_EQUAL exp\n        | exp GREATER_EQUAL exp\n        | exp IS_EQUAL exp\n        | exp NOT_EQUAL exp\n        | exp LOGICAL exp\n    \n    exp : MINUS exp\n    \n    exp : NOT exp\n    \n    exp : VAR_NAME PLUS_PLUS\n        | VAR_NAME MINUS_MINUS\n    \n    exp : VAR_NAME\n    \n    exp : INT\n        | FLOAT\n    \n    exp : STRING\n        | CHAR\n    \n    exp : BOOL\n    '
    
_lr_action_items = {'$end':([0,1,2,4,9,21,22,37,42,44,74,82,84,87,88,91,95,96,97,98,],[-2,0,-2,-4,-12,-1,-3,-5,-6,-7,-18,-20,-9,-19,-16,-13,-14,-15,-8,-17,]),'SEMICOL':([0,2,3,4,9,12,15,16,17,18,19,22,37,41,42,44,47,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,78,80,81,82,84,86,87,88,89,91,95,96,97,98,],[4,4,22,-4,-12,-41,-42,-43,-44,-45,-46,-3,-5,-41,-6,-7,4,74,-39,-40,-37,-38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-22,-23,-18,82,84,86,87,-20,-9,4,-19,-16,4,-13,-14,-15,-8,-17,]),'L_ROUND':([0,2,4,5,6,7,8,9,10,13,14,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[5,5,-4,36,36,36,46,-12,47,36,36,54,-3,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-5,36,36,-6,-7,36,5,36,36,36,-18,36,36,-20,-9,5,-19,-16,5,-13,-14,-15,-8,-17,]),'L_CURLY':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,83,84,86,87,88,89,91,92,94,95,96,97,98,],[6,6,-4,39,39,39,-12,39,39,-3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-5,39,39,-6,-7,39,6,39,39,39,-18,39,39,-20,89,-9,6,-19,-16,6,-13,89,89,-14,-15,-8,-17,]),'L_SQR':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[7,7,-4,40,40,40,-12,40,40,-3,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-5,40,40,-6,-7,40,7,40,40,40,-18,40,40,-20,-9,7,-19,-16,7,-13,-14,-15,-8,-17,]),'PRINT':([0,2,4,9,22,37,42,44,47,74,82,84,86,87,88,89,91,95,96,97,98,],[8,8,-4,-12,-3,-5,-6,-7,8,-18,-20,-9,8,-19,-16,8,-13,-14,-15,-8,-17,]),'FOR':([0,2,4,9,22,37,42,44,47,74,82,84,86,87,88,89,91,95,96,97,98,],[10,10,-4,-12,-3,-5,-6,-7,10,-18,-20,-9,10,-19,-16,10,-13,-14,-15,-8,-17,]),'DATA_TYPE':([0,2,4,9,22,37,42,44,47,74,82,84,86,87,88,89,91,95,96,97,98,],[11,11,-4,-12,-3,-5,-6,-7,11,-18,-20,-9,11,-19,-16,11,-13,-14,-15,-8,-17,]),'VAR_NAME':([0,2,4,5,6,7,9,11,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[12,12,-4,41,41,41,-12,48,41,41,-3,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-5,41,41,-6,-7,41,12,41,41,41,-18,41,41,-20,-9,12,-19,-16,12,-13,-14,-15,-8,-17,]),'MINUS':([0,2,3,4,5,6,7,9,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,84,86,87,88,89,91,95,96,97,98,],[13,13,24,-4,13,13,13,-12,-41,13,13,-42,-43,-44,-45,-46,-3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,24,13,13,-41,-6,24,-7,24,13,13,13,-39,-40,-37,24,13,-24,-25,-26,-27,-28,-29,24,24,24,24,24,24,24,-21,-22,-23,24,13,-18,13,24,24,13,24,24,-20,-9,13,-19,-16,13,-13,-14,-15,-8,-17,]),'NOT':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[14,14,-4,14,14,14,-12,14,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-5,14,14,-6,-7,14,14,14,14,14,-18,14,14,-20,-9,14,-19,-16,14,-13,-14,-15,-8,-17,]),'INT':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[15,15,-4,15,15,15,-12,15,15,-3,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,15,15,-6,-7,15,15,15,15,15,-18,15,15,-20,-9,15,-19,-16,15,-13,-14,-15,-8,-17,]),'FLOAT':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[16,16,-4,16,16,16,-12,16,16,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-5,16,16,-6,-7,16,16,16,16,16,-18,16,16,-20,-9,16,-19,-16,16,-13,-14,-15,-8,-17,]),'STRING':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[17,17,-4,17,17,17,-12,17,17,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-5,17,17,-6,-7,17,17,17,17,17,-18,17,17,-20,-9,17,-19,-16,17,-13,-14,-15,-8,-17,]),'CHAR':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[18,18,-4,18,18,18,-12,18,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,18,18,-6,-7,18,18,18,18,18,-18,18,18,-20,-9,18,-19,-16,18,-13,-14,-15,-8,-17,]),'BOOL':([0,2,4,5,6,7,9,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,46,47,49,54,73,74,75,79,82,84,86,87,88,89,91,95,96,97,98,],[19,19,-4,19,19,19,-12,19,19,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,19,19,-6,-7,19,19,19,19,19,-18,19,19,-20,-9,19,-19,-16,19,-13,-14,-15,-8,-17,]),'IF':([0,2,4,9,22,37,42,44,47,74,82,84,86,87,88,89,91,92,95,96,97,98,],[20,20,-4,-12,-3,-5,-6,-7,20,-18,-20,-9,20,-19,-16,20,-13,20,-14,-15,-8,-17,]),'R_CURLY':([2,4,6,9,15,16,17,18,19,21,22,37,41,42,43,44,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,82,84,87,88,89,91,93,95,96,97,98,],[-2,-4,42,-12,-42,-43,-44,-45,-46,-1,-3,-5,-41,-6,69,-7,-39,-40,-37,-38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-22,-23,-18,-20,-9,-19,-16,-2,-13,97,-14,-15,-8,-17,]),'PLUS':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[23,-41,-42,-43,-44,-45,-46,23,-41,23,23,-39,-40,-37,23,-24,-25,-26,-27,-28,-29,23,23,23,23,23,23,23,-21,-22,-23,23,23,23,23,23,]),'ASTERISK':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[25,-41,-42,-43,-44,-45,-46,25,-41,25,25,-39,-40,25,25,25,25,-26,-27,-28,-29,25,25,25,25,25,25,25,-21,-22,-23,25,25,25,25,25,]),'FWSLASH':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[26,-41,-42,-43,-44,-45,-46,26,-41,26,26,-39,-40,26,26,26,26,-26,-27,-28,-29,26,26,26,26,26,26,26,-21,-22,-23,26,26,26,26,26,]),'TOPI':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[27,-41,-42,-43,-44,-45,-46,27,-41,27,27,-39,-40,27,27,27,27,27,27,-28,-29,27,27,27,27,27,27,27,-21,-22,-23,27,27,27,27,27,]),'MOD':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[28,-41,-42,-43,-44,-45,-46,28,-41,28,28,-39,-40,28,28,28,28,28,28,-28,-29,28,28,28,28,28,28,28,-21,-22,-23,28,28,28,28,28,]),'LESSER':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[29,-41,-42,-43,-44,-45,-46,29,-41,29,29,-39,-40,-37,29,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,29,-21,-22,-23,29,29,29,29,29,]),'GREATER':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[30,-41,-42,-43,-44,-45,-46,30,-41,30,30,-39,-40,-37,30,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,30,-21,-22,-23,30,30,30,30,30,]),'LESSER_EQUAL':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[31,-41,-42,-43,-44,-45,-46,31,-41,31,31,-39,-40,-37,31,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,31,-21,-22,-23,31,31,31,31,31,]),'GREATER_EQUAL':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[32,-41,-42,-43,-44,-45,-46,32,-41,32,32,-39,-40,-37,32,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,32,-21,-22,-23,32,32,32,32,32,]),'IS_EQUAL':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[33,-41,-42,-43,-44,-45,-46,33,-41,33,33,-39,-40,-37,33,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,33,-21,-22,-23,33,33,33,33,33,]),'NOT_EQUAL':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[34,-41,-42,-43,-44,-45,-46,34,-41,34,34,-39,-40,-37,34,-24,-25,-26,-27,-28,-29,None,None,None,None,None,None,34,-21,-22,-23,34,34,34,34,34,]),'LOGICAL':([3,12,15,16,17,18,19,38,41,43,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,80,81,],[35,-41,-42,-43,-44,-45,-46,35,-41,35,35,-39,-40,-37,35,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,35,-21,-22,-23,35,35,35,35,35,]),'R_ROUND':([4,5,9,15,16,17,18,19,22,37,38,41,42,44,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,82,84,85,87,88,90,91,95,96,97,98,],[-4,37,-12,-42,-43,-44,-45,-46,-3,-5,68,-41,-6,-7,-39,-40,-37,-38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-22,-23,78,-10,-18,83,-20,-9,-11,-19,-16,94,-13,-14,-15,-8,-17,]),'R_SQR':([7,15,16,17,18,19,41,45,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[44,-42,-43,-44,-45,-46,-41,70,-39,-40,-37,-38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-22,-23,]),'ASSIGNMENT':([12,48,],[49,75,]),'PLUS_PLUS':([12,41,],[50,50,]),'MINUS_MINUS':([12,41,],[51,51,]),'COMMA':([15,16,17,18,19,41,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,85,],[-42,-43,-44,-45,-46,-41,-39,-40,-37,-38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-21,-22,-23,79,-10,79,]),'ELSE':([88,97,],[92,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,2,89,],[1,21,93,]),'stmt':([0,2,47,86,89,],[2,2,73,90,2,]),'exp':([0,2,5,6,7,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,46,47,49,54,73,75,79,86,89,],[3,3,38,43,45,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,38,43,45,72,3,76,77,80,81,72,3,3,]),'if':([0,2,47,86,89,92,],[9,9,9,9,9,96,]),'args':([46,79,],[71,85,]),'stmt_blk':([83,92,94,],[88,95,98,]),'else':([88,],[91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> stmt S','S',2,'p_start','yapl_parser.py',25),
  ('S -> <empty>','S',0,'p_start_empty','yapl_parser.py',32),
  ('stmt -> exp SEMICOL','stmt',2,'p_stmt_exp','yapl_parser.py',39),
  ('stmt -> SEMICOL','stmt',1,'p_stmt_exp','yapl_parser.py',40),
  ('stmt -> L_ROUND R_ROUND','stmt',2,'p_stmt_exp','yapl_parser.py',41),
  ('stmt -> L_CURLY R_CURLY','stmt',2,'p_stmt_exp','yapl_parser.py',42),
  ('stmt -> L_SQR R_SQR','stmt',2,'p_stmt_exp','yapl_parser.py',43),
  ('stmt_blk -> L_CURLY S R_CURLY','stmt_blk',3,'p_stmt_blk','yapl_parser.py',49),
  ('stmt -> PRINT L_ROUND args R_ROUND SEMICOL','stmt',5,'p_print_stmt','yapl_parser.py',56),
  ('args -> exp','args',1,'p_args_exp','yapl_parser.py',63),
  ('args -> args COMMA args','args',3,'p_args_exp','yapl_parser.py',64),
  ('stmt -> if','stmt',1,'p_if_stmt','yapl_parser.py',72),
  ('if -> IF L_ROUND exp R_ROUND stmt_blk else','if',6,'p_if','yapl_parser.py',78),
  ('else -> ELSE stmt_blk','else',2,'p_else','yapl_parser.py',84),
  ('else -> ELSE if','else',2,'p_else','yapl_parser.py',85),
  ('else -> <empty>','else',0,'p_else','yapl_parser.py',86),
  ('stmt -> FOR L_ROUND stmt exp SEMICOL stmt R_ROUND stmt_blk','stmt',8,'p_for_stmt','yapl_parser.py',93),
  ('stmt -> DATA_TYPE VAR_NAME SEMICOL','stmt',3,'p_dec_stmt','yapl_parser.py',99),
  ('stmt -> DATA_TYPE VAR_NAME ASSIGNMENT exp SEMICOL','stmt',5,'p_dec_stmt','yapl_parser.py',100),
  ('stmt -> VAR_NAME ASSIGNMENT exp SEMICOL','stmt',4,'p_assign_stmt','yapl_parser.py',109),
  ('exp -> L_ROUND exp R_ROUND','exp',3,'p_exp_brackets','yapl_parser.py',115),
  ('exp -> L_CURLY exp R_CURLY','exp',3,'p_exp_brackets','yapl_parser.py',116),
  ('exp -> L_SQR exp R_SQR','exp',3,'p_exp_brackets','yapl_parser.py',117),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','yapl_parser.py',123),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','yapl_parser.py',124),
  ('exp -> exp ASTERISK exp','exp',3,'p_exp_bin','yapl_parser.py',125),
  ('exp -> exp FWSLASH exp','exp',3,'p_exp_bin','yapl_parser.py',126),
  ('exp -> exp TOPI exp','exp',3,'p_exp_bin','yapl_parser.py',127),
  ('exp -> exp MOD exp','exp',3,'p_exp_bin','yapl_parser.py',128),
  ('exp -> exp LESSER exp','exp',3,'p_exp_bin','yapl_parser.py',129),
  ('exp -> exp GREATER exp','exp',3,'p_exp_bin','yapl_parser.py',130),
  ('exp -> exp LESSER_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',131),
  ('exp -> exp GREATER_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',132),
  ('exp -> exp IS_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',133),
  ('exp -> exp NOT_EQUAL exp','exp',3,'p_exp_bin','yapl_parser.py',134),
  ('exp -> exp LOGICAL exp','exp',3,'p_exp_bin','yapl_parser.py',135),
  ('exp -> MINUS exp','exp',2,'p_exp_neg','yapl_parser.py',141),
  ('exp -> NOT exp','exp',2,'p_exp_not','yapl_parser.py',147),
  ('exp -> VAR_NAME PLUS_PLUS','exp',2,'p_exp_uni','yapl_parser.py',153),
  ('exp -> VAR_NAME MINUS_MINUS','exp',2,'p_exp_uni','yapl_parser.py',154),
  ('exp -> VAR_NAME','exp',1,'p_exp_var','yapl_parser.py',160),
  ('exp -> INT','exp',1,'p_exp_num','yapl_parser.py',166),
  ('exp -> FLOAT','exp',1,'p_exp_num','yapl_parser.py',167),
  ('exp -> STRING','exp',1,'p_exp_str','yapl_parser.py',173),
  ('exp -> CHAR','exp',1,'p_exp_str','yapl_parser.py',174),
  ('exp -> BOOL','exp',1,'p_exp_bool','yapl_parser.py',180),
]
